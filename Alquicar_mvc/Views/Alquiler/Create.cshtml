@model Alquicar_mvc.Models.AlquilerCarModel

@{
    ViewBag.Title = "Create";
}
<div>
    <h3 class="center-text">Alquilar Vehiculo</h3>
</div>
<div class="mdl-alquilar mdl-grid demo-content">
    <div class="demo-graphs mdl-shadow--2dp mdl-color--white mdl-cell mdl-cell--10-col arbol">
        @using (Html.BeginForm("Create", "Alquiler", FormMethod.Post))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <!----div -->
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt">
                    @Html.LabelFor(model => model.start_date, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <input class="mdl-textfield__input" type="date" id="start_date" name="start_date" value="@ViewBag.idate" >
                    @Html.ValidationMessageFor(model => model.start_date, "", new { @class = "text-danger" })
                </div>
                
                <!----------------------------     calendar        ------------------------>
                <div id="cal" style="display:none">
                    <div class="header">
                        <span class="left button" id="prev"> &lang; </span>       
                        <span class="month-year" id="label"> June 20&0 </span>
                        <span class="right button" id="next"> &rang; </span>
                    </div>
                    <table class="mdl-data-table" id="days">
                        <thead>
                            <tr>
                                <td>do</td>
                                <td>lu</td>
                                <td>ma</td>
                                <td>mi</td>
                                <td>ju</td>
                                <td>vi</td>
                                <td>sa</td>
                            </tr>
                        </thead>             
                    </table>
                    <div id="cal-frame">
                        <table class="curr mdl-data-table mdl-js-data-table">
                            <tbody>
                                <tr><td class="nil"></td><td class="nil"></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td></tr>
                                <tr><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td><td class="today">11</td><td>12</td></tr>
                                <tr><td>13</td><td>14</td><td>15</td><td>16</td><td>17</td><td>18</td><td>19</td></tr>
                                <tr><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td></tr>
                                <tr><td>27</td><td>28</td><td>29</td><td>30</td><td class="nil"></td><td class="nil"></td><td class="nil"></td></tr>
                            </tbody>
                        </table>
                    </div>
                </div>

           

            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt">
                @Html.LabelFor(model => model.final_date, htmlAttributes: new { @class = "mdl-textfield__label" })
                <input id="final_date" name="final_date" class="mdl-textfield__input" type="date" value="@ViewBag.fdate">
                @Html.ValidationMessageFor(model => model.final_date, "", new { @class = "text-danger" })          
            </div>

            

         
            <div>
                <div>
                    <input type="submit" id="show-dialog" value="Buscar" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored" />
                </div>
            </div>
         }
    </div>
    <div style="display:none">
        @using (Html.BeginForm("alquilar", "Alquiler", FormMethod.Post, new { id = "alquilarForm" }))
        {
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt" style="display:none">
                @Html.LabelFor(model => model.car_id, htmlAttributes: new { @class = "mdl-textfield__label" })
                @Html.EditorFor(model => model.car_id, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                @Html.ValidationMessageFor(model => model.car_id, "", new { @class = "text-danger" })
            </div>
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt" style="display:none">
                @Html.LabelFor(model => model.cliente_id, htmlAttributes: new { @class = "mdl-textfield__label" })
                @Html.EditorFor(model => model.cliente_id, new { htmlAttributes = new { @class = "mdl-textfield__input", @value="@Session['user_id'].ToString()"} })
                @Html.ValidationMessageFor(model => model.cliente_id, "", new { @class = "text-danger" })
            </div>
        }
    </div>
    

    <dialog class="mdl-dialog">
        <h4 class="mdl-dialog__title">Alquilar</h4>
        <div class="mdl-dialog__content">
            <p>
                Desea alquilar este vehiculo?
            </p>
        </div>
        <div class="mdl-dialog__actions">
            <button type="button" class="mdl-button accept">aceptar</button>
            <button type="button" class="mdl-button close">cancelar</button>
        </div>
    </dialog>
  

    <div id="modalyes" style="display:none" class="demo-card-event mdl-card mdl-shadow--2dp">
        <div class="mdl-card__title mdl-card--expand">
            <h4>Alquilar vehiculo</h4>
        </div>
        <div class="mdl-card__supporting-text">
            Desea alquilar este vehiculo?
        </div>
        <div class="mdl-card__actions mdl-card--border">
            <button id="acceptmdl" class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect">
                aceptar
            </button>
            <div class="mdl-layout-spacer"></div>
            <button id="canelarmdl" class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect">
                cancelar
            </button>
        </div>
        
    </div>
    @if (ViewBag.vehiculos != null)
    {
        foreach (System.Data.DataRow row in ViewBag.vehiculos.Rows)
        {
     
            <section class="section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp">
                <header class="section__play-btnr mdl-cell mdl-cell--5-col-desktop mdl-cell--2-col-tablet mdl-cell--4-col-phone  mdl-color-text--white">
                    <img width="210" height="210" src="@row["foto"].ToString()" />
                </header>
                <div class="mdl-card mdl-cell mdl-cell--7-col-desktop mdl-cell--6-col-tablet mdl-cell--4-col-phone">
                    <div class="mdl-card__title">
                        <h2 class="mdl-card__title-text">Caracteristicas</h2>
                    </div>
                    <div class="md-caracteristicas mdl-card__supporting-text">
                        <div><label>Tipo</label><label class="izq">@row["tipo"].ToString()</label></div>
                        <div><label>Direccion</label><label class="izq">@row["direccion"].ToString()</label></div>
                        <div><label>Transmicion</label><label class="izq">@row["transmicion"].ToString()</label></div>
                        <div><label>Marca</label><label class="izq">@row["marca"].ToString()</label></div>
                        <div class="price"><label>precio final por dia</label><label class="izq">$@row["precio_dia"].ToString()</label></div>
                    </div>
                    <div class="mdl-card__actions cars">
                        <a href="#" id="@row["id"].ToString()" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored">Alquilar</a>
                    </div>
                </div>
            </section>
        }
    }
    <script>
        // ----------- script alquicar -------------------------
        $(document).ready(function () {
            var cal = CALENDAR();
            cal.init();
            
            //modal();
            //modalaux();
            current();
            min_date_return();
        });

        function modal() {
            $('.cars .mdl-button').click(function () {
                $id = $($(this)).attr('id');
                $('#modalyes').fadeIn();
                $('#car_id').val($id);
                $('#acceptmdl').click(function () {           
                    var cliente = @Session["user_id"].ToString();
                    $('#cliente_id').val(cliente);
                    $('#alquilarForm').submit()
                });
                $('#canelarmdl').click(function () {
                    $('#modalyes').fadeOut();
                });
                console.log($id);       
            });     
       
        }
        function modalaux() {
        
            var dialog = document.querySelector('dialog');
            if (!dialog.showModal) {
                dialogPolyfill.registerDialog(dialog);
            }
            dialog.showModal();
            
            dialog.querySelector('.close').addEventListener('click', function () {
                dialog.close();
            });
    
        }

        function current() {
            var meses = new Array("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre");
            var diasSemana = new Array("Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado");
            var f = new Date();
            var month = monthcurrent(f.getMonth());
            var day = daycurrent(f.getDate());
            var initalDate = f.getFullYear() + "-" + month + "-" + day;
            $('#start_date').attr({ "value": initalDate, "min": initalDate });
            $('#start_date').click();
            $('#final_date').val(initalDate);
            $('#final_date').click();

        }      
        function monthcurrent(month) {
            if (month > 10) {
                return month+1;
            } else {
                return "0" + (month+1);
            }
        }

        function daycurrent(day){
            if (day < 10) {
                return "0"+day;
            } else {
                return day;
            }
        }

        function min_date_return() {
            $('#final_date').click(function () {
                $minimal = $('#start_date').val().split("-");
                var fecha = parseInt($minimal[2])+1;
                $($(this)).attr("min", $minimal[0]+"-" + $minimal[1] +"-"+ daycurrent(fecha));
            });
        }

        var CALENDAR = function () {
            var wrap, label,
                    months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

            function init(newWrap) {
                wrap = $(newWrap || "#cal");
                label = wrap.find("#label");
                wrap.find("#prev").bind("click.calendar", function () { switchMonth(false); });
                wrap.find("#next").bind("click.calendar", function () { switchMonth(true); });
                label.bind("click", function () { switchMonth(null, new Date().getMonth(), new Date().getFullYear()); });
                label.click();
            }

            function switchMonth(next, month, year) {
                var curr = label.text().trim().split(" "), calendar, tempYear = parseInt(curr[1], 10);
                month = month || ((next) ? ((curr[0] === "December") ? 0 : months.indexOf(curr[0]) + 1) : ((curr[0] === "January") ? 11 : months.indexOf(curr[0]) - 1));
                year = year || ((next && month === 0) ? tempYear + 1 : (!next && month === 11) ? tempYear - 1 : tempYear);

                if (!month) {
                    if (next) {
                        if (curr[0] === "December") {
                            month = 0;
                        } else {
                            month = months.indexOf(curr[0]) + 1;
                        }
                    } else {
                        if (curr[0] === "January") {
                            month = 11;
                        } else {
                            month = months.indexOf(curr[0]) - 1;
                        }
                    }
                }

                if (!year) {
                    if (next && month === 0) {
                        year = tempYear + 1;
                    } else if (!next && month === 11) {
                        year = tempYear - 1;
                    } else {
                        year = tempYear;
                    }
                }

                calendar = createCal(year, month);
                $("#cal-frame", wrap)
                    .find(".curr")
                        .removeClass("curr")
                        .addClass("temp")
                    .end()
                    .prepend(calendar.calendar())
                    .find(".temp")
                        .fadeOut("slow", function () { $(this).remove(); });

                $('#label').text(calendar.label);
            }

            function createCal(year, month) {
                var day = 1, i, j, haveDays = true,
                startDay = new Date(year, month, day).getDay(),
                daysInMonths = [31, (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
                calendar = [];

                if (createCal.cache[year]) {
                    if (createCal.cache[year][month]) {
                        return createCal.cache[year][month];
                    }
                } else {
                    createCal.cache[year] = {};
                }

                i = 0;
                while (haveDays) {
                    calendar[i] = [];
                    for (j = 0; j < 7; j++) {
                        if (i === 0) {
                            if (j === startDay) {
                                calendar[i][j] = day++;
                                startDay++;
                            }
                        } else if (day <= daysInMonths[month]) {
                            calendar[i][j] = day++;
                        } else {
                            calendar[i][j] = "";
                            haveDays = false;
                        }
                        if (day > daysInMonths[month]) {
                            haveDays = false;
                        }
                    }
                    i++;
                }

                if (calendar[5]) {
                    for (i = 0; i < calendar[5].length; i++) {
                        if (calendar[5][i] !== "") {
                            calendar[4][i] = "<span>" + calendar[4][i] + "</span><span>" + calendar[5][i] + "</span>";
                        }
                    }
                    calendar = calendar.slice(0, 5);
                }

                for (i = 0; i < calendar.length; i++) {
                    calendar[i] = "<tr><td>" + calendar[i].join("</td><td>") + "</td></tr>";
                }
                calendar = $("<table>" + calendar.join("") + "</table>").addClass("curr");

                $("td:empty", calendar).addClass("nil");
                if (month === new Date().getMonth()) {
                    $('td', calendar).filter(function () { return $(this).text() === new Date().getDate().toString(); }).addClass("today");
                }
                createCal.cache[year][month] = { calendar: function () { return calendar.clone() }, label: months[month] + " " + year };

                return createCal.cache[year][month];
            }
            createCal.cache = {};
            return {
                init: init,
                switchMonth: switchMonth,
                createCal: createCal
            };
        };
 
    </script>
</div>

