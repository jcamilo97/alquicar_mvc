@model Alquicar_mvc.Models.AlquilerCarModel

@{
    ViewBag.Title = "Create";
}

<h4>Alquilar Vehiculo</h4>
<div class="mdl-grid demo-content">
    <div class="demo-graphs mdl-shadow--2dp mdl-color--white mdl-cell mdl-cell--10-col">
        @using (Html.BeginForm())
        {  
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div >
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt">
                    @Html.LabelFor(model => model.start_date, htmlAttributes: new { @class = "mdl-textfield__label" })
                    @Html.EditorFor(model => model.start_date, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    @Html.ValidationMessageFor(model => model.start_date, "", new { @class = "text-danger" })
                </div>
                
                <!----------------------------     calendar        ------------------------>
                <div id="cal">
                    <div class="header">
                        <span class="left button" id="prev"> &lang; </span>       
                        <span class="month-year" id="label"> June 20&0 </span>
                        <span class="right button" id="next"> &rang; </span>
                    </div>
                    <table class="mdl-data-table mdl-js-data-table" id="days">
                        <tr>
                            <td>sun</td>
                            <td>mon</td>
                            <td>tue</td>
                            <td>wed</td>
                            <td>thu</td>
                            <td>fri</td>
                            <td>sat</td>
                        </tr>
                    </table>
                    <div id="cal-frame">
                        <table class="curr">
                            <tbody>
                                <tr><td class="nil"></td><td class="nil"></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td></tr>
                                <tr><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td><td class="today">11</td><td>12</td></tr>
                                <tr><td>13</td><td>14</td><td>15</td><td>16</td><td>17</td><td>18</td><td>19</td></tr>
                                <tr><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td></tr>
                                <tr><td>27</td><td>28</td><td>29</td><td>30</td><td class="nil"></td><td class="nil"></td><td class="nil"></td></tr>
                            </tbody>
                        </table>
                    </div>
                </div>

             </div>

            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt">
                @Html.LabelFor(model => model.final_date, htmlAttributes: new { @class = "mdl-textfield__label" })
                <div>
                    @Html.EditorFor(model => model.final_date, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    @Html.ValidationMessageFor(model => model.final_date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt">
                @Html.LabelFor(model => model.car_id, htmlAttributes: new { @class = "mdl-textfield__label" })
                <div>
                    @Html.EditorFor(model => model.car_id, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    @Html.ValidationMessageFor(model => model.car_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label mdl-pdt">
                @Html.LabelFor(model => model.cliente_id, htmlAttributes: new { @class = "mdl-textfield__label" })
                <div>
                    @Html.EditorFor(model => model.cliente_id, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    @Html.ValidationMessageFor(model => model.cliente_id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                <div>
                    <input type="submit" value="Create" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored" />
                </div>
            </div>
         }
    </div>
</div>

<script>
    $(document).ready(function () {
        var cal = CALENDAR();

        cal.init();
    });
    var CALENDAR = function () {
        var wrap, label,
                months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

        function init(newWrap) {
            wrap = $(newWrap || "#cal");
            label = wrap.find("#label");
            wrap.find("#prev").bind("click.calendar", function () { switchMonth(false); });
            wrap.find("#next").bind("click.calendar", function () { switchMonth(true); });
            label.bind("click", function () { switchMonth(null, new Date().getMonth(), new Date().getFullYear()); });
            label.click();
        }

        function switchMonth(next, month, year) {
            var curr = label.text().trim().split(" "), calendar, tempYear = parseInt(curr[1], 10);
            month = month || ((next) ? ((curr[0] === "December") ? 0 : months.indexOf(curr[0]) + 1) : ((curr[0] === "January") ? 11 : months.indexOf(curr[0]) - 1));
            year = year || ((next && month === 0) ? tempYear + 1 : (!next && month === 11) ? tempYear - 1 : tempYear);

            if (!month) {
                if (next) {
                    if (curr[0] === "December") {
                        month = 0;
                    } else {
                        month = months.indexOf(curr[0]) + 1;
                    }
                } else {
                    if (curr[0] === "January") {
                        month = 11;
                    } else {
                        month = months.indexOf(curr[0]) - 1;
                    }
                }
            }

            if (!year) {
                if (next && month === 0) {
                    year = tempYear + 1;
                } else if (!next && month === 11) {
                    year = tempYear - 1;
                } else {
                    year = tempYear;
                }
            }

            calendar = createCal(year, month);
            $("#cal-frame", wrap)
                .find(".curr")
                    .removeClass("curr")
                    .addClass("temp")
                .end()
                .prepend(calendar.calendar())
                .find(".temp")
                    .fadeOut("slow", function () { $(this).remove(); });

            $('#label').text(calendar.label);
        }

        function createCal(year, month) {
            var day = 1, i, j, haveDays = true,
            startDay = new Date(year, month, day).getDay(),
            daysInMonths = [31, (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
            calendar = [];

            if (createCal.cache[year]) {
                if (createCal.cache[year][month]) {
                    return createCal.cache[year][month];
                }
            } else {
                createCal.cache[year] = {};
            }

            i = 0;
            while (haveDays) {
                calendar[i] = [];
                for (j = 0; j < 7; j++) {
                    if (i === 0) {
                        if (j === startDay) {
                            calendar[i][j] = day++;
                            startDay++;
                        }
                    } else if (day <= daysInMonths[month]) {
                        calendar[i][j] = day++;
                    } else {
                        calendar[i][j] = "";
                        haveDays = false;
                    }
                    if (day > daysInMonths[month]) {
                        haveDays = false;
                    }
                }
                i++;
            }

            if (calendar[5]) {
                for (i = 0; i < calendar[5].length; i++) {
                    if (calendar[5][i] !== "") {
                        calendar[4][i] = "<span>" + calendar[4][i] + "</span><span>" + calendar[5][i] + "</span>";
                    }
                }
                calendar = calendar.slice(0, 5);
            }

            for (i = 0; i < calendar.length; i++) {
                calendar[i] = "<tr><td>" + calendar[i].join("</td><td>") + "</td></tr>";
            }
            calendar = $("<table>" + calendar.join("") + "</table>").addClass("curr");

            $("td:empty", calendar).addClass("nil");
            if (month === new Date().getMonth()) {
                $('td', calendar).filter(function () { return $(this).text() === new Date().getDate().toString(); }).addClass("today");
            }
            createCal.cache[year][month] = { calendar: function () { return calendar.clone() }, label: months[month] + " " + year };

            return createCal.cache[year][month];
        }
        createCal.cache = {};
        return {
            init: init,
            switchMonth: switchMonth,
            createCal: createCal
        };
    };
</script>
